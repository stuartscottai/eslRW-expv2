<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Diagnostic - File Check</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
  <div class="max-w-4xl mx-auto bg-white rounded-lg shadow-lg p-6">
    <h1 class="text-2xl font-bold mb-6">üîç File Loading Diagnostic</h1>
    
    <div id="results" class="space-y-3"></div>
  </div>

  <script>
    const results = document.getElementById('results');

    function addResult(message, isSuccess) {
      const div = document.createElement('div');
      div.className = `p-3 rounded ${isSuccess ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`;
      div.textContent = (isSuccess ? '‚úÖ ' : '‚ùå ') + message;
      results.appendChild(div);
    }

    // Test 1: Check if templates.js exists
    fetch('/scripts/templates.js')
      .then(res => {
        if (res.ok) {
          addResult('templates.js found and accessible', true);
        } else {
          addResult(`templates.js returned ${res.status} error`, false);
        }
      })
      .catch(err => {
        addResult(`templates.js failed to load: ${err.message}`, false);
      });

    // Test 2: Check if form.js exists
    fetch('/scripts/form.js')
      .then(res => {
        if (res.ok) {
          addResult('form.js found and accessible', true);
        } else {
          addResult(`form.js returned ${res.status} error`, false);
        }
      })
      .catch(err => {
        addResult(`form.js failed to load: ${err.message}`, false);
      });

    // Test 3: Check if main.js exists
    fetch('/scripts/main.js')
      .then(res => {
        if (res.ok) {
          addResult('main.js found and accessible', true);
        } else {
          addResult(`main.js returned ${res.status} error`, false);
        }
      })
      .catch(err => {
        addResult(`main.js failed to load: ${err.message}`, false);
      });

    // Test 4: Try to load templates.js as a module
    setTimeout(() => {
      const script = document.createElement('script');
      script.type = 'module';
      script.textContent = `
        import { initializeTemplates, getActiveTemplate } from '/scripts/templates.js';
        
        const results = document.getElementById('results');
        const div = document.createElement('div');
        div.className = 'p-3 rounded bg-green-100 text-green-800';
        div.textContent = '‚úÖ templates.js loaded as module successfully';
        results.appendChild(div);

        // Try to run a function
        try {
          initializeTemplates();
          const template = getActiveTemplate();
          const div2 = document.createElement('div');
          div2.className = 'p-3 rounded bg-green-100 text-green-800';
          div2.textContent = '‚úÖ Template functions work! Active: ' + template.name;
          results.appendChild(div2);
        } catch (err) {
          const div2 = document.createElement('div');
          div2.className = 'p-3 rounded bg-red-100 text-red-800';
          div2.textContent = '‚ùå Template functions error: ' + err.message;
          results.appendChild(div2);
        }
      `;
      
      script.onerror = (err) => {
        addResult('Module import failed - check console for details', false);
        console.error('Module error:', err);
      };
      
      document.body.appendChild(script);
    }, 1000);

    // Test 5: Check browser console
    setTimeout(() => {
      const div = document.createElement('div');
      div.className = 'p-3 rounded bg-blue-100 text-blue-800 mt-6';
      div.innerHTML = '<strong>Next step:</strong> Press F12 and check the Console tab for detailed error messages';
      results.appendChild(div);
    }, 2000);
  </script>
</body>
</html>
