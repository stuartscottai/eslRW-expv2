  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
S  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
C  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
S  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
C  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
S  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
j  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
j  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
V  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
^  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
[  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
z  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
A  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
Z  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
0  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
9  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
_  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
]  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
3  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
2  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
4  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
$  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
A  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
q  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
S  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
&  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
&  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
!  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
G  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
R  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
S  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
1  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
1  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
6  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
!  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
x  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
:  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
!  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
S  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
C  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
S  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
C  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
:  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
U  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
!  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
B  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
N  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
B  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
B  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
B  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
B  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
B  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
B  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
B  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
I  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
-  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
N  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
_  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
_  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
q  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
S  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
_  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
_  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
L  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
>  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
D  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
N  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
&  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
&  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
!  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
V  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
U  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
3  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
–  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
2  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
4  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
:  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
k  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
A  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
!  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
k  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
U  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
k  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
C  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
U  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
:  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
_  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
:  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
:  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
:  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
S  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
L  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
>  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
D  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
!  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
U  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
q  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
C  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
k  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
x  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
L  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
>  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
D  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
!  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
<  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
8  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
b  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
8  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
U  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
:  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
P  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
/  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
|  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
F  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
q  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
y  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
S  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
A  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
p  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
[  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
"  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
"  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
]  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
f  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
>  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
k  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
L  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
g  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
=  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
>  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
w  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
T  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
?  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
l  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
   try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
h  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
{  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
}  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}

  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
c  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
u  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
m  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
.  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
E  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
v  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
L  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
s  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
r  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
(  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
D  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
O  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
M  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
C  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
L  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
o  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
a  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
e  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
d  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
'  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
,  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
n  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
i  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
t  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
)  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
;  try {
    const current = window.Theme?.get() || 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
try {
    let current = (window.Theme?.get() || 'light');
    if (current === 'system') current = 'light';
    if (themeFieldset) {
      const radios = themeFieldset.querySelectorAll('input[name="theme"]');
      radios.forEach(r => {
        r.checked = (r.value === current);
        r.addEventListener('change', () => window.Theme?.set(r.value));
      });
    }
  } catch {}
